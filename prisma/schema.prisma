// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int          @id @default(autoincrement())
  email     String       @unique
  name      String
  password  String
  createdAt DateTime     @default(now())
  profile   UserProfile?

  // TAMBAHKAN TIGA BARIS DI BAWAH INI
  posts    Post[]
  comments Comment[]
  likes    Like[]
  groups         Group[]
  sentMessages   GroupMessage[]
}

model UserProfile {
  id                         Int      @id @default(autoincrement())
  ageRange                   String
  gender                     String
  recentProblems             String[]
  mainGoal                   String
  feelingRecently            String
  stressStartDate            String
  emotionDuration            String
  moodSwingFrequency         String
  supportNeedFrequency       String
  supportTypeInterest        String[]
  mentalHealthChallenges     String[]
  motivation                 String
  soughtHelpBefore           Boolean
  professionalHelpDuration   String?
  supportKindLookingFor      String
  socialConnectionImportance String
  learnAboutMentalHealth     Boolean
  mentalHealthTopics         String[]
  receiveReminders           Boolean
  reminderFrequency          String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model Therapist {
  id              Int     @id @default(autoincrement())
  name            String
  title           String // e.g., "M.Psi, Psikolog"
  specialization  String // e.g., "Gangguan Kecemasan dan PTSD"
  pricePerSession Float
  profilePicture  String? // URL ke foto profil
  rating          Float? // Rating rata-rata
  yearsExperience Int
  totalSessions   Int
  totalClients    Int

  // Relasi: Satu Terapis punya satu profil detail
  detailedProfile TherapistProfile?
}

model TherapistProfile {
  id                Int      @id @default(autoincrement())
  bio               String   @db.Text // Teks "Hi, I'm Clara..."
  specializations   String[] // ["Depresi", "Anxiety", "Bipolar"]
  experiences       String[] // ["8+ years in private practice", "Community mental health"]
  languages         String[] // ["English", "Bahasa Indonesia"]
  workPlaces        String[] // ["RSI Menur Surabaya"]
  strNumber         String
  educations        String[] // ["Universitas Ciputra Surabaya", "Universitas Gadjah Mada"]
  therapyApproaches String[] // ["CBT", "Art Therapy"]

  // Relasi: Terhubung ke model Therapist
  therapist   Therapist @relation(fields: [therapistId], references: [id])
  therapistId Int       @unique
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now())

  // Relasi: Dibuat oleh siapa
  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  // Relasi: Punya banyak comment dan like
  comments Comment[]
  likes    Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  // Relasi: Dibuat oleh siapa
  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  // Relasi: Berada di post mana
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  // Relasi: Dibuat oleh siapa
  user   User @relation(fields: [userId], references: [id])
  userId Int

  // Relasi: Nge-like post mana
  post   Post @relation(fields: [postId], references: [id])
  postId Int

  @@unique([userId, postId]) // User hanya bisa like satu post sekali
}

model Group {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  
  // Relasi: Anggota grup dan pesan di dalam grup
  members     User[]
  messages    GroupMessage[]
}

model GroupMessage {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now())

  // Relasi: Pesan ini dikirim oleh siapa
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  Int

  // Relasi: Pesan ini ada di grup mana
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   Int
}
